version: "3.8"

#services, representan los contenedores que se estaran utilizando en la orquestaci√≥n
services:
  express_rest_api:
    container_name: my_express_rest_api
    build: ./app/
    environment:
      - DB_PORT=3306
      - DB_HOST=mysql_db
    ports:
      - "3000:3000"
    depends_on:
      - mysql_db
    networks:
      - docker_pirate_net
    restart: on-failure
    # deploy se usa para ambientes CLOUD, se pude limitar la cantidad de recurso que utilza un contenedor (RAM, CPU, CORE)
    deploy:
      resources:
        limits:
          memory: 1G
  mysql_db:
    container_name: my_mysql_db
    image: mysql:latest
    # Comando importante para permitir autenticaciones heredadas para versiones antiguas
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: employees
    expose:
      - "3306"
    ports:
      - "3306:3306"
    volumes:
      - docker_pirate_mysql_db_volume:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d
    networks:
      - docker_pirate_net
    deploy:
      resources:
        limits:
          memory: 1G

volumes:
  docker_pirate_mysql_db_volume:
    name: "docker_pirate_mysql_db_volume"

networks:
  docker_pirate_net:
    driver: bridge
    name: docker_pirate_net
